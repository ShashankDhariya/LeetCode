/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
 // My Aproach: 
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode* head = new ListNode();
        ListNode* l = head;
    
        int carry = 0;
        while(l1 != NULL && l2 != NULL){
            int a = (l1->val+l2->val)+carry;
            l->next = new ListNode(a%10);
            if(a>9)
                carry = a/10;
            else 
                carry = 0;
            
            l = l->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        
        if(l1 != NULL){
            while(l1 != NULL){
                int a = (l1->val)+carry;
                l->next = new ListNode(a%10);
                if(a>9)
                    carry = a/10;
                else 
                    carry = 0;
            
                l = l->next;
                l1 = l1->next;
            }
        }
        
        else{
            while(l2 != NULL){
                int a = (l2->val)+carry;
                l->next = new ListNode(a%10);
                if(a>9)
                    carry = a/10;
                else 
                    carry = 0;
            
                l = l->next;
                l2 = l2->next;
            }
        }
        if(carry)
            l->next = new ListNode(1);   
        
        return head->next;
    }
};

//    OR

/*

*/
